@import 'sprints.less';
@import '/prefs/backlog.less';

.style(@type) when (@type = emphasize) {
	td.flags span.task-index {
		color: yellow;
	}

	td.name {
		font-weight: bold;
	}
}

.style(@type) when (@type = dim) {
	opacity: .4;
}

.style(@type) when (@type = hide) {
	display: none !important
}

.backlog-tabs {
	position: relative;
	margin-bottom: 16px;

	input#search {
		position: absolute;
		top: 8px;
		right: 0px;
		width: 200px;
		background: url(/static/images/search.png) no-repeat 2px;
		padding-left: 24px;
	}
}

#selected-task-box {
	position: fixed;
	top: 0px;
	left: 0px;
	display: none;
	border: 1px solid #000;
	background-color: #ae1c12;
	color: #fff;
	width: 100%;
	padding: 6px;
	z-index: 2;

	span {
		padding-right: 20px;
	}
}

#filter-status .fancy {
	#filter-assigned .fancy;
}

#filter-assigned .away {
	background-color: #999;

	&:hover {
		color: #fff;
		border: 1px solid #dedede;
	}

	&:active, &.selected {
		background-color:#6299c5;
	}
}

ul#goal-menu {
	width: 350px;
}

.hide-temp {
	display: none;
}

#assigned-menu.contextMenu li a {
	height: auto;
}

table.tasktable {
	tr.dateline2 {
		.cancel-search, .save-search {
			display: none;

			img {
				position: relative;
				top: 1px;
				width: 12px;
				border: 0px;
			}
		}
	}

	tr.task {
		// Styles set by prefs
		&[status='not started'] {.style(@pref_not_started);}
		&[status='in progress'] {.style(@pref_in_progress);}
		&[status='complete'] {.style(@pref_complete);}
		&[status='blocked'] {.style(@pref_blocked);}
		&[status='deferred'] {.style(@pref_deferred);}
		&[status='canceled'] {.style(@pref_canceled);}
		&[status='split'] {.style(@pref_split);}

		&[status='deferred'] td.hours input {
			text-decoration: line-through;
		}
	}
}
